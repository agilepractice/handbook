[{"id":0,"href":"localhost/posts/hello/","title":"Hello 1st Post","section":"Blog","content":" First Post # Hugo uses the excellent [Go][] [html/template][gohtmltemplate] library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.\nThis document is a brief primer on using Go templates. The [Go docs][gohtmltemplate] provide more details.\n"},{"id":1,"href":"localhost/docs/arch/","title":"Index","section":"Docs","content":" Title # These documents have names that are short noun phrases. For example, \u0026ldquo;ADR 1: Deployment on Ruby on Rails 3.0.10\u0026rdquo; or \u0026ldquo;ADR 9: LDAP for Multitenant Integration\u0026rdquo;\nContext: # This section describes the forces at play, including technological, political, social, and project local. These forces are probably in tension, and should be called out as such. The language in this section is value-neutral. It is simply describing facts.\nDecision: # This section describes our response to these forces. It is stated in full sentences, with an active voice. \u0026ldquo;We will …\u0026rdquo;\nStatus: # A decision may be \u0026ldquo;proposed\u0026rdquo; if the project stakeholders haven\u0026rsquo;t agreed with it yet, or \u0026ldquo;accepted\u0026rdquo; once it is agreed. If a later ADR changes or reverses a decision, it may be marked as \u0026ldquo;deprecated\u0026rdquo; or \u0026ldquo;superseded\u0026rdquo; with a reference to its replacement.\nConsequences: # This section describes the resulting context, after applying the decision. All consequences should be listed here, not just the \u0026ldquo;positive\u0026rdquo; ones. A particular decision may have positive, negative(tech-debt), and neutral consequences, but all of them affect the team and project in the future.\nComments # The principles will help you to understand and use the template:\nLight : Agile methods are not opposed to documentation, only to valueless documentation. Keeping ADR simple and light will help us easy to read and understand, with reasonable maintenance effort. Consistent : Documentation is not the end, but the beginning, with ADR, we can easily share the motivation behind the decision, increase visibility for everyone, present for the future, and learn from the evolving. \u0026hellip;\nScenarios that ADR may help: Cross team discussion and collaboration Architecture changes (more about arch) New service created Important tools/frameworks changes\nScenarios that ADR may not suggest: Too details about the discussion, with less or no impact of architectural \u0026hellip;\n"},{"id":2,"href":"localhost/docs/sd/","title":"Index","section":"Docs","content":" Sensible Default # We write these practices up separately because most of them are not widely used in the industry, or they are commonly misunderstood or misapplied. We believe they are a key part of the \u0026ldquo;secret sauce\u0026rdquo; that Thoughtworks brings to our clients. The practices themselves aren\u0026rsquo;t in any way secret — we and others talk and write about them endlessly. The secret lies in knowing which ones to use, applied in the correct context, that enable us to solve the right problems at the right time.\n"}]